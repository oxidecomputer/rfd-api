{
  "openapi": "3.0.3",
  "info": {
    "title": "RFD API",
    "description": "Programmatic access to RFDs",
    "contact": {
      "url": "https://oxide.computer",
      "email": "augustus@oxidecomputer.com"
    },
    "version": ""
  },
  "paths": {
    "/github": {
      "post": {
        "tags": [
          "hidden"
        ],
        "operationId": "github_webhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GitHubCommitPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "successfully enqueued operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Null",
                  "type": "string",
                  "enum": [
                    null
                  ]
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/rfd": {
      "get": {
        "summary": "List all available RFDs",
        "operationId": "get_rfds",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_ListRfd",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListRfd"
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "summary": "Create a new RFD",
        "operationId": "reserve_rfd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReserveRfdBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "successfully enqueued operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReserveRfdResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/rfd/{number}": {
      "get": {
        "summary": "Get the latest representation of a RFD",
        "operationId": "get_rfd",
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "The RFD number (examples: 1 or 123)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullRfd"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "summary": "Replace the full document of a RFD",
        "operationId": "set_rfd_document",
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "The RFD number (examples: 1 or 123)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RfdUpdateBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "successfully enqueued operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Null",
                  "type": "string",
                  "enum": [
                    null
                  ]
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/rfd/{number}/attr/{attr}": {
      "get": {
        "summary": "Get an attribute of a RFD",
        "operationId": "get_rfd_attr",
        "parameters": [
          {
            "in": "path",
            "name": "attr",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RfdAttrName"
            }
          },
          {
            "in": "path",
            "name": "number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfdAttr"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "summary": "Set an attribute of a RFD",
        "operationId": "set_rfd_attr",
        "parameters": [
          {
            "in": "path",
            "name": "attr",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RfdAttrName"
            }
          },
          {
            "in": "path",
            "name": "number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RfdAttrValue"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "successfully enqueued operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfdAttr"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/rfd/{number}/content": {
      "post": {
        "summary": "Replace the contents of a RFD",
        "operationId": "set_rfd_content",
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "The RFD number (examples: 1 or 123)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RfdUpdateContentBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "successfully enqueued operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Null",
                  "type": "string",
                  "enum": [
                    null
                  ]
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/rfd/{number}/discuss": {
      "post": {
        "summary": "Open a RFD for discussion",
        "operationId": "discuss_rfd",
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "The RFD number (examples: 1 or 123)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "successfully enqueued operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfdAttr"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/rfd/{number}/publish": {
      "post": {
        "summary": "Publish a RFD",
        "operationId": "publish_rfd",
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "The RFD number (examples: 1 or 123)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "successfully enqueued operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RfdAttr"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/rfd/{number}/visibility": {
      "post": {
        "summary": "Modify the visibility of a RFD",
        "operationId": "update_rfd_visibility",
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "The RFD number (examples: 1 or 123)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RfdVisibility"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rfd"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/rfd-search": {
      "get": {
        "summary": "Search the RFD index and get a list of results",
        "operationId": "search_rfds",
        "parameters": [
          {
            "in": "query",
            "name": "attributes_to_crop",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "highlight_post_tag",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "highlight_pre_tag",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CommitSha": {
        "type": "string"
      },
      "ContentFormat": {
        "type": "string",
        "enum": [
          "asciidoc",
          "markdown"
        ]
      },
      "Error": {
        "description": "Error information from a response.",
        "type": "object",
        "properties": {
          "error_code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "request_id"
        ]
      },
      "FileSha": {
        "type": "string"
      },
      "FormattedSearchResultHit": {
        "type": "object",
        "properties": {
          "anchor": {
            "nullable": true,
            "type": "string"
          },
          "content": {
            "nullable": true,
            "type": "string"
          },
          "hierarchy": {
            "type": "array",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "minItems": 6,
            "maxItems": 6
          },
          "hierarchy_radio": {
            "type": "array",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "minItems": 6,
            "maxItems": 6
          },
          "object_id": {
            "type": "string"
          },
          "rfd_number": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "url": {
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "hierarchy",
          "hierarchy_radio",
          "object_id",
          "rfd_number"
        ]
      },
      "FullRfd": {
        "type": "object",
        "properties": {
          "authors": {
            "nullable": true,
            "type": "string"
          },
          "commit": {
            "$ref": "#/components/schemas/CommitSha"
          },
          "committed_at": {
            "type": "string",
            "format": "date-time"
          },
          "content": {
            "type": "string"
          },
          "discussion": {
            "nullable": true,
            "type": "string"
          },
          "format": {
            "$ref": "#/components/schemas/ContentFormat"
          },
          "id": {
            "$ref": "#/components/schemas/TypedUuidForRfdId"
          },
          "labels": {
            "nullable": true,
            "type": "string"
          },
          "link": {
            "nullable": true,
            "type": "string"
          },
          "pdfs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FullRfdPdfEntry"
            }
          },
          "rfd_number": {
            "type": "integer",
            "format": "int32"
          },
          "sha": {
            "$ref": "#/components/schemas/FileSha"
          },
          "state": {
            "nullable": true,
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "visibility": {
            "$ref": "#/components/schemas/Visibility"
          }
        },
        "required": [
          "commit",
          "committed_at",
          "content",
          "format",
          "id",
          "pdfs",
          "rfd_number",
          "sha",
          "title",
          "visibility"
        ]
      },
      "FullRfdPdfEntry": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string"
          },
          "source": {
            "type": "string"
          }
        },
        "required": [
          "link",
          "source"
        ]
      },
      "GitHubCommit": {
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "modified": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "removed": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "added",
          "id",
          "modified",
          "removed",
          "timestamp"
        ]
      },
      "GitHubCommitPayload": {
        "type": "object",
        "properties": {
          "commits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GitHubCommit"
            }
          },
          "head_commit": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/GitHubCommit"
              }
            ]
          },
          "installation": {
            "$ref": "#/components/schemas/GitHubInstallation"
          },
          "ref": {
            "type": "string"
          },
          "repository": {
            "$ref": "#/components/schemas/GitHubRepository"
          },
          "sender": {
            "$ref": "#/components/schemas/GitHubSender"
          }
        },
        "required": [
          "commits",
          "installation",
          "ref",
          "repository",
          "sender"
        ]
      },
      "GitHubInstallation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "node_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "node_id"
        ]
      },
      "GitHubRepository": {
        "type": "object",
        "properties": {
          "default_branch": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "name": {
            "type": "string"
          },
          "node_id": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/GitHubRepositoryOwner"
          }
        },
        "required": [
          "default_branch",
          "id",
          "name",
          "node_id",
          "owner"
        ]
      },
      "GitHubRepositoryOwner": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string"
          }
        },
        "required": [
          "login"
        ]
      },
      "GitHubSender": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "login": {
            "type": "string"
          },
          "node_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "login",
          "node_id",
          "type"
        ]
      },
      "ListRfd": {
        "type": "object",
        "properties": {
          "authors": {
            "nullable": true,
            "type": "string"
          },
          "commit": {
            "$ref": "#/components/schemas/CommitSha"
          },
          "committed_at": {
            "type": "string",
            "format": "date-time"
          },
          "discussion": {
            "nullable": true,
            "type": "string"
          },
          "format": {
            "$ref": "#/components/schemas/ContentFormat"
          },
          "id": {
            "$ref": "#/components/schemas/TypedUuidForRfdId"
          },
          "labels": {
            "nullable": true,
            "type": "string"
          },
          "link": {
            "nullable": true,
            "type": "string"
          },
          "rfd_number": {
            "type": "integer",
            "format": "int32"
          },
          "sha": {
            "$ref": "#/components/schemas/FileSha"
          },
          "state": {
            "nullable": true,
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "visibility": {
            "$ref": "#/components/schemas/Visibility"
          }
        },
        "required": [
          "commit",
          "committed_at",
          "format",
          "id",
          "rfd_number",
          "sha",
          "title",
          "visibility"
        ]
      },
      "ReserveRfdBody": {
        "type": "object",
        "properties": {
          "content": {
            "nullable": true,
            "description": "Optional contents of the RFD",
            "type": "string"
          },
          "title": {
            "description": "Title of the RFD",
            "type": "string"
          }
        },
        "required": [
          "title"
        ]
      },
      "ReserveRfdResponse": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "number"
        ]
      },
      "Rfd": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "nullable": true,
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "$ref": "#/components/schemas/TypedUuidForRfdId"
          },
          "link": {
            "nullable": true,
            "type": "string"
          },
          "rfd_number": {
            "type": "integer",
            "format": "int32"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "visibility": {
            "$ref": "#/components/schemas/Visibility"
          }
        },
        "required": [
          "created_at",
          "id",
          "rfd_number",
          "updated_at",
          "visibility"
        ]
      },
      "RfdAttr": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "discussion": {
                "type": "string"
              }
            },
            "required": [
              "discussion"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "labels": {
                "type": "string"
              }
            },
            "required": [
              "labels"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "state": {
                "$ref": "#/components/schemas/RfdState"
              }
            },
            "required": [
              "state"
            ],
            "additionalProperties": false
          }
        ]
      },
      "RfdAttrValue": {
        "type": "object",
        "properties": {
          "message": {
            "nullable": true,
            "description": "Optional Git commit message to send with this update (recommended)",
            "type": "string"
          },
          "value": {
            "description": "Full value to set this attribute to in the existing RFD contents",
            "type": "string"
          }
        },
        "required": [
          "value"
        ]
      },
      "RfdState": {
        "type": "string",
        "enum": [
          "abandoned",
          "committed",
          "discussion",
          "ideation",
          "prediscussion",
          "published"
        ]
      },
      "RfdUpdateBody": {
        "type": "object",
        "properties": {
          "document": {
            "description": "Full Asciidoc document to store for this RFD",
            "type": "string"
          },
          "message": {
            "nullable": true,
            "description": "Optional Git commit message to send with this update (recommended)",
            "type": "string"
          }
        },
        "required": [
          "document"
        ]
      },
      "RfdUpdateContentBody": {
        "type": "object",
        "properties": {
          "content": {
            "description": "Asciidoc content to store for this RFD",
            "type": "string"
          },
          "message": {
            "nullable": true,
            "description": "Optional Git commit message to send with this update (recommended)",
            "type": "string"
          }
        },
        "required": [
          "content"
        ]
      },
      "RfdVisibility": {
        "type": "object",
        "properties": {
          "visibility": {
            "$ref": "#/components/schemas/Visibility"
          }
        },
        "required": [
          "visibility"
        ]
      },
      "SearchResultHit": {
        "type": "object",
        "properties": {
          "anchor": {
            "nullable": true,
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "formatted": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/FormattedSearchResultHit"
              }
            ]
          },
          "hierarchy": {
            "type": "array",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "minItems": 6,
            "maxItems": 6
          },
          "hierarchy_radio": {
            "type": "array",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "minItems": 6,
            "maxItems": 6
          },
          "object_id": {
            "type": "string"
          },
          "rfd_number": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "url": {
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "content",
          "hierarchy",
          "hierarchy_radio",
          "object_id",
          "rfd_number"
        ]
      },
      "SearchResults": {
        "type": "object",
        "properties": {
          "hits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchResultHit"
            }
          },
          "limit": {
            "nullable": true,
            "type": "integer",
            "format": "uint",
            "minimum": 0
          },
          "offset": {
            "nullable": true,
            "type": "integer",
            "format": "uint",
            "minimum": 0
          },
          "query": {
            "type": "string"
          }
        },
        "required": [
          "hits",
          "query"
        ]
      },
      "TypedUuidForRfdId": {
        "type": "string",
        "format": "uuid"
      },
      "Visibility": {
        "type": "string",
        "enum": [
          "public",
          "private"
        ]
      },
      "RfdAttrName": {
        "type": "string",
        "enum": [
          "discussion",
          "labels",
          "state"
        ]
      }
    },
    "responses": {
      "Error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "hidden",
      "description": "Internal endpoints"
    }
  ]
}
